#include<bits/stdc++.h>
using namespace std;



class Solution{
    public:

    long long maxSubarraySum(int arr[], int n){
        
        // naive approach
        /*
        long long res = INT_MIN;
        
        for(int i=0;i<n;i++)
        {
            long long sum = 0;
            
            for(int j=i;j<n;j++)
            {
                sum+=arr[j];
                res = max(res,sum);
            }
        }
        
        return res;
        
        */
        
        // Efficent approach.
        long long res = arr[0];
        long long mEnd = arr[0];
        
        for(int i=1;i<n;i++)
        {
            long long  temp = arr[i];
            mEnd = max(mEnd+arr[i],temp);
            res = max(res,mEnd);
        }
        
        return res;
    }
};


int main()
{
    int t,n;
    
    cin>>t; //input testcases
    while(t--) //while testcases exist
    {
        
        cin>>n; //input size of array
        
        int a[n];
        
        for(int i=0;i<n;i++)
            cin>>a[i]; //inputting elements of array
            
        Solution ob;
        
        cout << ob.maxSubarraySum(a, n) << endl;
    }
}
